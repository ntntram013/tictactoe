{"ast":null,"code":"var _jsxFileName = \"D:\\\\HK1_21_22\\\\Web\\\\week2\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst numberOfSquare = 9;\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    let htmlFull = [];\n\n    for (let i = 0; i < this.props.numRow; i++) {\n      let htmlRow = [];\n      let tempRow = [];\n\n      for (let j = 0; j < this.props.numCol; j++) {\n        tempRow.push(this.renderSquare(i * this.props.numCol + j));\n      }\n\n      htmlRow = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: tempRow\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 23\n      }, this);\n      htmlFull.push(htmlRow);\n    }\n\n    return htmlFull;\n    /*(\r\n            <div>\r\n              <div className=\"board-row\">\r\n                {this.renderSquare(0)}\r\n                {this.renderSquare(1)}\r\n                {this.renderSquare(2)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n                {this.renderSquare(3)}\r\n                {this.renderSquare(4)}\r\n                {this.renderSquare(5)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n                {this.renderSquare(6)}\r\n                {this.renderSquare(7)}\r\n                {this.renderSquare(8)}\r\n            </div>\r\n        </div>\r\n    );\r\n       */\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      movePosition: [],\n      currentHistory: 0,\n      numCol: 5,\n      numRow: 5\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history;\n    const movePosition = this.state.movePosition;\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n      movePosition: movePosition.concat(i),\n      currentHistory: this.state.currentHistory + 1\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0,\n      currentHistory: step\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const col = this.state.numCol;\n    const row = this.state.numRow;\n    const winner = calculateWinner(current.squares, col, row);\n    const moves = history.map((step, move) => {\n      const position = this.state.movePosition[move - 1];\n      const desc = move ? 'Go to move #' + move + ' [' + position % col + ',' + Math.floor(position / col) + ']' : 'Go to game start';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: move === this.state.currentHistory ? 'bold' : '',\n          onClick: () => this.jumpTo(move),\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this);\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      if (this.state.movePosition.length === numberOfSquare && this.state.currentHistory === numberOfSquare) {\n        status = 'Result: Draw';\n      } else {\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i),\n          numCol: col,\n          numRow: row\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 160,\n  columnNumber: 5\n}, this), document.getElementById('root'));\n\nfunction calculateWinner(squares, col, row) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["D:/HK1_21_22/Web/week2/src/index.js"],"names":["React","ReactDOM","numberOfSquare","Square","props","onClick","value","Board","Component","renderSquare","i","squares","render","htmlFull","numRow","htmlRow","tempRow","j","numCol","push","Game","constructor","state","history","Array","fill","stepNumber","xIsNext","movePosition","currentHistory","handleClick","current","length","slice","calculateWinner","setState","concat","jumpTo","step","col","row","winner","moves","map","move","position","desc","Math","floor","status","document","getElementById","lines","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nconst numberOfSquare = 9;\r\nfunction Square(props) {\r\n    return (\r\n        <button className=\"square\" onClick={props.onClick}>\r\n             {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n    renderSquare(i) {\r\n        return (\r\n            <Square\r\n                value={this.props.squares[i]}\r\n                onClick={() => this.props.onClick(i)}\r\n\r\n            />\r\n        );\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let htmlFull = [];\r\n        for(let i = 0; i<this.props.numRow;i++) {\r\n            let htmlRow = [];\r\n            let tempRow = [];\r\n            for (let j = 0; j < this.props.numCol; j++) {\r\n                tempRow.push( this.renderSquare(i * this.props.numCol + j));\r\n            }\r\n            htmlRow = <div className={\"board-row\"} key={i}>{tempRow}</div>\r\n            htmlFull.push(htmlRow);\r\n        }\r\n        return htmlFull;\r\n        /*(\r\n\r\n\r\n            <div>\r\n\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n         */\r\n    }\r\n\r\n\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null)\r\n            }],\r\n            stepNumber:0,\r\n            xIsNext: true,\r\n            movePosition: [],\r\n            currentHistory:0,\r\n            numCol:5,\r\n            numRow:5,\r\n\r\n\r\n        };\r\n    }\r\n    handleClick(i) {\r\n        const history = this.state.history;\r\n        const movePosition = this.state.movePosition;\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{squares: squares}]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext,\r\n            movePosition: movePosition.concat(i),\r\n            currentHistory: this.state.currentHistory+1,\r\n        });\r\n    }\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0,\r\n            currentHistory: step,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const col = this.state.numCol;\r\n        const row = this.state.numRow;\r\n        const winner = calculateWinner(current.squares,col,row);\r\n        const moves = history.map((step, move) => {\r\n            const position = this.state.movePosition[move-1];\r\n            const desc = move ? 'Go to move #' + move + ' [' + position%col +','+ Math.floor(position/col) +']': 'Go to game start';\r\n            return (        \r\n                <li key={move}>\r\n                    <button className={move===this.state.currentHistory?'bold':''} onClick={() => this.jumpTo(move)}>{desc}</button>\r\n                </li>    \r\n            );   \r\n        });\r\n        let status;\r\n        if (winner) {\r\n            status = 'Winner: ' + winner;\r\n        }\r\n        else {\r\n            if(this.state.movePosition.length === numberOfSquare && this.state.currentHistory === numberOfSquare){\r\n                status = 'Result: Draw';\r\n            }\r\n            else {\r\n                status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n            }\r\n\r\n        }\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board\r\n                        squares={current.squares}\r\n                        onClick={i => this.handleClick(i)}\r\n                        numCol = {col}\r\n                        numRow = {row}\r\n                    />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div> {status}</div>\r\n                    <ol>{moves}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n   }\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\nfunction calculateWinner(squares,col,row) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}"]},"metadata":{},"sourceType":"module"}